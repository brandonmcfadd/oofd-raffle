<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-NLJD57NQRY"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-NLJD57NQRY');
  </script>

  <!-- Icons -->
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#ffffff">

  <!-- Meta -->
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Raffle Admin</title>

  <style>
    body {
      background: #111;
      color: white;
      font-family: sans-serif;
      padding: 2rem;
      margin: 0;
    }

    h1,
    h2 {
      text-align: center;
      margin-top: 0;
    }

    form {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 2rem;
      width: 100%;
      max-width: 500px;
      margin-inline: auto;
    }

    input[type="text"],
    input[type="number"],
    input[type="password"],
    select {
      padding: 0.75rem;
      font-size: 1.1rem;
      margin: 0.5rem 0;
      border-radius: 5px;
      border: none;
      width: 100%;
      box-sizing: border-box;
    }

    button {
      padding: 0.75rem 1.5rem;
      font-size: 1.1rem;
      margin-top: 0.5rem;
      background-color: #d32f2f;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .winner-list {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      align-items: center;
      width: 100%;
    }

    .winner-entry {
      background: #222;
      padding: 1rem;
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }

    .winner-text {
      font-size: 1rem;
      word-break: break-word;
    }

    .delete-btn {
      background-color: #f44336;
      font-size: 0.9rem;
      padding: 0.5rem 0.75rem;
      border: none;
      border-radius: 5px;
      color: white;
      margin-top: 0.5rem;
    }

    @media (max-width: 480px) {
      body {
        padding: 1rem;
      }

      .winner-entry {
        flex-direction: column;
        align-items: flex-start;
      }

      .winner-text {
        margin-bottom: 0.5rem;
      }

      input[type="text"],
      input[type="number"],
      select,
      button {
        font-size: 1rem;
      }
    }
  </style>
</head>

<body>
  <h1>Admin Panel</h1>
  <section>
    <h2>Add New Raffle Winner</h2>
    <form id="new-winner-form">
      <input type="number" name="ticket_number" id="ticket_number" placeholder="Ticket Number" inputmode="numeric"
        pattern="\d*" maxlength="12" required />

      <select id="prize" name="prize" required>
        <!-- JS will populate this -->
      </select>

      <input type="text" id="custom-prize" placeholder="Enter custom prize" style="display: none;" />

      <button type="submit">Submit Winner</button>
    </form>
  </section>

  <section>
    <h2>Current Winners</h2>
    <div class="winner-list" id="winner-list">
      <!-- JS will populate this -->
    </div>
  </section>

  <script>
    async function fetchWinners() {
      const res = await fetch('/api/current_numbers');
      const data = (await res.json()).slice().reverse();
      const list = document.getElementById('winner-list');
      list.innerHTML = '';

      data.forEach(entry => {
        const div = document.createElement('div');
        div.className = 'winner-entry';

        div.innerHTML = `
          <div class="winner-text">Ticket #${entry.number}<br>Prize #${entry.prize_number}<br>${entry.prize}</div>
          <button class="delete-btn" data-number="${entry.number}">Delete</button>
        `;

        list.appendChild(div);
      });
    }

    document.getElementById('new-winner-form').addEventListener('submit', async function (e) {
      e.preventDefault();

      const ticket_number = document.getElementById('ticket_number').value;
      const selectEl = document.getElementById('prize');
      const customEl = document.getElementById('custom-prize');

      const prize = selectEl.value === 'Other' ? customEl.value : selectEl.value;

      const formData = new URLSearchParams();
      formData.append('ticket_number', ticket_number);
      formData.append('prize', prize);

      const response = await fetch('/api/current_numbers', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: formData.toString()
      });

      if (response.ok) {
        this.reset();
        customEl.style.display = 'none';
        updatePrizeDropdown();
        await fetchWinners();
      }
    });

    document.getElementById('winner-list').addEventListener('click', async function (e) {
      if (e.target.classList.contains('delete-btn')) {
        const number = e.target.getAttribute('data-number');

        const formData = new URLSearchParams();
        formData.append('ticket_number', number);

        const response = await fetch('/api/delete_number', {
          method: 'POST',
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
          body: formData.toString()
        });

        if (response.ok) {
          updatePrizeDropdown();
          await fetchWinners();
        }
      }
    });

    let allPrizes = {};

    async function loadPrizes() {
      const res = await fetch('/api/prizes');
      allPrizes = await res.json();
      updatePrizeDropdown();
    }

    function updatePrizeDropdown() {
      const select = document.getElementById('prize');
      const custom = document.getElementById('custom-prize');

      // ðŸ›‘ Exit early if a selection other than the first one is made
      if (select.selectedIndex > 0) return;

      // Gather claimed prize numbers
      const claimedPrizeNumbers = Array.from(document.querySelectorAll('.winner-text')).map(el => {
        const match = el.innerHTML.match(/Prize #(\d+)/);
        return match ? match[1] : null;
      }).filter(Boolean);

      // Clear and rebuild options
      select.innerHTML = '';

      Object.entries(allPrizes).forEach(([key, val]) => {
        if (!claimedPrizeNumbers.includes(key)) {
          const option = document.createElement('option');
          option.value = key; // e.g., "5"
          option.textContent = `${key} - ${val.ShortDesc}`;
          select.appendChild(option);
        }
      });

      // Add "Other" option
      const otherOption = document.createElement('option');
      otherOption.value = 'Other';
      otherOption.textContent = 'Other';
      select.appendChild(otherOption);

      // Toggle custom input
      select.onchange = () => {
        const isOther = select.value === 'Other';
        custom.style.display = isOther ? 'block' : 'none';
        custom.required = isOther;
      };
    }


    // Initial load
    fetchWinners();
    loadPrizes();
    updatePrizeDropdown();
    setInterval(fetchWinners, 5000);
    setInterval(updatePrizeDropdown, 1000);
  </script>
</body>

</html>